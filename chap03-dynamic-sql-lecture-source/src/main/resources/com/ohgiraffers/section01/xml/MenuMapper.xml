<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.MenuMapper">

    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xml.MenuDTO">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuCode" column="MENU_CODE"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>
    <!-- 설명.
          OGNL (Object Gragh Navigation Language)
           : single quatation('') 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은
           객체 필드 또는 변수로 인식하게 작성하는 기법

        필기.
         1. gte(>=): greater than equal
         2. gt(>): greater than
         3. lte(<=): less than equal
         4. lt(<): less than
         5. eq(==): equal
         6. neq(!=): not equal

        <![CDATA[]]> 안에 들어가 있는 문자를 쿼리로 인식시킴
     -->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
        <!-- 사용자가 입력한 값에 따라서 다른 테스트문이 출력됨. (if test=" "의 조건으로 분류) -->
        <if test="maxPrice gte 0 and maxPrice lte 10000">   <!-- 0원보다 크고 10000원 이하 -->
            <![CDATA[
            AND A.MENU_PRICE < #{maxPrice}
            ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000"> <!-- 10000원보다 크고 20000원 이하 -->
            AND A.MENU_PRICE BETWEEN 10000 AND #{maxPrice}   <!-- 예시) 사용자가 15000을 입력하면 10000원 이상 15000원 이하의 값이 출력 -->
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000"> <!-- 20000원보다 크고 30000원 이하 -->
            AND A.MENU_PRICE BETWEEN 20000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{maxPrice}  <!-- 30000원보다 크고 사용자가 입력한 값 이하 -->
        </if>
    </select>

    <select id="searchMenu" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">         <!-- condition이 name으로 넘어오면 value가 들어간 메뉴 조회 -->
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">     <!-- condition이 category으로 넘어오면 카테고리 번호가 value인 메뉴 조회 -->
            AND B.CATEGORY_NAME = #{value}
        </if>
    </select>

    <select id="searchMenuBySupCategory" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT
               A.MENU_CODE
             , A.MENU_NAME
             , A.MENU_PRICE
             , A.CATEGORY_CODE
             , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN (8, 9, 10)
            </when>
            <when test="value == '디저트'">
                AND A.CATEGORY_CODE IN (11, 12)
            </when>
        </choose>
    </select>

    <select id="searchMenuByRandomMenuCode" resultMap="menuResultMap">
        SELECT
              A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
          FROM TBL_MENU A
         WHERE A.ORDERABLE_STATUS = 'Y'
           AND A.MENU_CODE IN

        <!-- 설명. list 또는 map과 같은 컬렉션 타입으로 넘어온 값을 가지고 반복해서 원하는 sql을 작성할 수 있다. -->
        <foreach collection="list"
                 item="menuCode" open="(" close=")" separator=", ">
            #{menuCode}
        </foreach>

        <!-- foreach는 private 타입이여도 리플렉션 기술을 활용해 값을 가져올 수 있다. -->
        <!-- 설명. 원하는 곳에 있는 메소드의 반환 값을 바로 활용할 수도 있다.(권장되지 않음)-->
<!--        <foreach collection="@com.ohgiraffers.section01.xml.Application@generateRandomMenuCodeList()"-->
<!--                 item="menuCode" open="(" close=")" separator=", ">     &lt;!&ndash; (3, 5, 7, 11, 20)으로 만들어줌 &ndash;&gt;-->
<!--            #{menuCode}-->
<!--        </foreach>-->
    </select>

    <select id="searchMenuByCodeOrSearchAll" parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
    resultMap="menuResultMap">
        SELECT
              A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
          FROM TBL_MENU A
        <if test="condition != null and condition eq 'menuCode'">
            WHERE A.MENU_CODE = #{value}
        </if>

    </select>

    <select id="searchMenuByNameOrCategory" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A

        <!-- 필기. 조건이 만족하지 않을 때 where절이 사라져 sql syntax 오류가 뜨기 때문에 where 태그로 감싸준다. -->
 <!--       <where>
         <if test="nameValue != null">
             A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
         </if>
        <if test="categoryValue != null">
             AND A.CATEGORY_CODE = #{ categoryValue }
        </if>
        </where>-->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <where>
                <if test="nameValue != null">
                    A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
                </if>
                <if test="categoryValue != null">
                    AND A.CATEGORY_CODE = #{ categoryValue }
                </if>
            </where>
        </trim>
    </select>

    <update id="updateMenu" parameterType="hashmap">
        UPDATE
               TBL_MENU
        <set>
        <if test="menuName != null and menuName != ''">
              MENU_NAME = #{menuName}
        </if>
        <if test="orderableStatus != null and orderableStatus != '' ">
            , ORDERABLE_STATUS = #{orderableStatus}
        </if>
        </set>
         WHERE MENU_CODE = #{menuCode}
    </update>
</mapper>